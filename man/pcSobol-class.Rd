% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_def_sobolSA.R
\docType{class}
\name{pcSobol-class}
\alias{pcSobol-class}
\alias{plot,pcSobol-method}
\alias{print,pcSobol-method}
\alias{show,pcSobol-method}
\title{An S4 class to return the results of sensitivity analyses}
\usage{
\S4method{print}{pcSobol}(x, ...)

\S4method{show}{pcSobol}(object)

\S4method{plot}{pcSobol}(x, outcome_var = "Outcome",
  legend_pos = c("topright", "bottomright", "bottomleft", "topleft"),
  ptype = c("all", "fo", "total"))
}
\arguments{
\item{x}{The result slot of an object created by \code{sobol_sa}.}

\item{...}{ignored}

\item{object}{S4 pcSA object}

\item{outcome_var}{Optional character vector for labeling the outcome variable
in the plot. Default is "Outcome".}

\item{legend_pos}{Character vector that sets the position of the legend to one
of: "topright", "bottomright", "bottomleft", or "topleft".}

\item{ptype}{Optional Character vector for first order, total, or all effects
c("all", "fo", "total").}
}
\value{
Returns a ggplot2 plot.
}
\description{
An S4 class to return the results of sensitivity analyses

Plots pcSobol S4 object
}
\section{Methods (by generic)}{
\itemize{
\item \code{print}: An S4 method for printing a pcSobol S4 object

\item \code{show}: An S4 method for showing a pcSobol S4 object

\item \code{plot}: Plot First-Order (Main) Effects and Total Effects from a Sobol Sensitivity 
Analysis of a Simulation Model in the Same Plot


This is function of the \strong{eat} package. \code{sobol_sa} conducts a 
global variance decomposition, and then this can be used to plot it.
}}
\section{Slots}{

\describe{
\item{\code{call}}{Language from the call of the function.}

\item{\code{result}}{sobol2007 s3 class from \code{sensitivity} package.}

\item{\code{timing}}{Numeric vector length one with the total elapsed time it took 
to execute.}

\item{\code{session}}{the results from calling \code{sessionInfo()} at end of
\code{\link{pc_sa}} function.}
}}
\examples{
fake_abm <- function(params, out) {
  x1 <- params[1]
  x2 <- params[2]
  if (out=="sq") return(x1^2 + x2 + rnorm(1, 0))
  if (out=="ident") return(x1 + x2 + rnorm(1, 0))
}
inputs <- lapply(list(param1 = NA, param2 = NA), 
                 function(x) list(random_function = "qunif",
                                  ARGS = list(min = 0, max = 1)))
s <- sobol_sa(fake_abm, inputs, "sq")
plot(s)

}
\references{
J. C. Thiele, W. Kurth, V. Grimm, Facilitating Parameter
Estimation and Sensitivity Analysis of Agent-Based Models: A Cookbook Using
NetLogo and R. Journal of Artificial Societies and Social Simulation. 17, 11
(2014).
}

